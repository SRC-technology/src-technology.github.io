{"version":3,"file":"static/webpack/static/development/pages/index.js.ff66975a8206fef0c8ec.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Head from 'next/head'\nimport { Fragment, useState, useEffect } from 'react'\nimport Lattice from '../src/Lattice'\n\nexport default () => {\n  const [viewportSize, updateViewportSize] = useState({ width: undefined, height: undefined })\n\n  useEffect(() => {\n    if (global.innerWidth !== undefined) {\n\n      console.log(global.innerHeight,\n        global.innerWidth)\n      const doTheUpdate = () => updateViewportSize({\n        height: global.innerHeight,\n        width: global.innerWidth,\n      })\n\n      global.addEventListener('resize', doTheUpdate)\n      \n      doTheUpdate()\n\n      return global.removeEventListener('resize', doTheUpdate)\n    }\n  }, [])\n\n  return (\n    <Fragment>\n      <Head>\n        <style>\n          {`* { margin: 0; padding: 0 }`}\n        </style>\n      </Head>\n      { viewportSize.width !== undefined (\n        <Lattice \n          width={viewportSize.width}\n          height={viewportSize.height}\n          devicePixelRatio={\n            global.devicePixelRatio !== undefined  \n              ? global.devicePixelRatio \n              : 1}\n        />\n      )}\n    </Fragment>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;A","sourceRoot":""}