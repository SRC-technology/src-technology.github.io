{"version":3,"file":"static/webpack/static/development/pages/index.js.d324ec42ab4cb0ef6bbb.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./src/Lattice.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Lattice from '../src/Lattice'\n\nexport default () => {\n  const [viewportSize, updateViewportSize] = useState({ width: 500, height: 500 })\n\n  useEffect(() => {\n    if (global.innerWidth !== undefined) {\n      updateViewportSize({\n        height: global.innerHeight,\n        width: global.innerWidth,\n      })\n    }\n  })\n\n  return <Lattice \n    width={viewportSize.width}\n    height={viewportSize.height}\n    devicePixelRatio={\n      global.devicePixelRatio !== undefined  \n        ? global.devicePixelRatio \n        : 1}\n  />\n}","import React, { useRef, useEffect } from 'react'\n\nexport default ({ width, height, devicePixelRatio }) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    if (ref.current !== undefined) {\n        const context2d = ref.current.getContext('2d')\n        context2d.beginPath()\n        context2d.moveTo(50, 50)\n        context2d.lineTo(100, 100)\n        context2d.closePath()\n        context2d.stroke()\n    }\n  })\n\n  return <canvas \n        ref={(domElement) => ref.current = domElement}\n        width={width * devicePixelRatio} \n        height={height * devicePixelRatio} \n        style={{width, height}} \n    />\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}